name: Scan CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  Sonarqube_Static_Code_Analysis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  
          
      - name: SonarQube Scan 
        run: docker run --rm -v $PWD:/usr/src sonarsource/sonar-scanner-cli:latest sonar-scanner -Dsonar.host.url=${{secrets.SONAR_HOST}} -Dsonar.token=${{secrets.SONAR_TOKEN}} -Dsonar.projectKey=${{secrets.SONAR_PROJECTKEY}}

  Build_Docker_Image:
    runs-on: build

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Docker build image
      run: docker build --build-arg REACT_APP_BASE_URL=${{secrets.BE_API}} -t $DOCKER_REGISTRY/$DOCKER_REPO:$IMAGE_TAG .

  Trivy_Image_Scan:
    runs-on: build

    env:
      REPORT_NAME: shoeshop_fe_trivy_report
      IMAGE_NAME: shoeshop_fe:v1

    steps:
    - uses: actions/checkout@v4

    - name: Trivy scan image
      run: |
        docker run --rm -v $PWD:/shoeshop_fe -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image --download-db-only
        docker run --rm -v $PWD:/shoeshop_fe -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image --format template --template "@contrib/html.tpl" --output /shoeshop_fe/$REPORT_NAME.html $DOCKER_REGISTRY/$DOCKER_REPO:$IMAGE_TAG
    
    - name: Upload Trivy image scan HTML report as an artifact
      uses: actions/upload-artifact@v3
      with:
        name: shoeshop_fe_trivy_report
        path: ./${{ env.REPORT_NAME }}.html

    - name: Clean up Docker resources
      run: docker rmi -f $IMAGE_NAME || true


  Push_Image_Internal:
    runs-on: ubuntu-latest

    steps: 
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Docker build image
      run: docker build --build-arg REACT_APP_BASE_URL=${{secrets.BE_API}} -t $DOCKER_REGISTRY/$DOCKER_REPO:$IMAGE_TAG .

    - name: Log in to Docker Registry
      run: echo "${{ secrets.REGISTRY_PASS }}" | docker login harbor.lptdevops.website -u "${{ secrets.REGISTRY_USER }}" --password-stdin

    - name: Push Docker image
      run: docker push $DOCKER_REGISTRY/$DOCKER_REPO:$IMAGE_TAG

  Clean_Up:
    runs-on: ubuntu-latest
    needs: Push_Image_Internal
    steps:
      - name: Log out from Docker Registry
        run: docker logout harbor.lptdevops.website || true

      - name: Remove Docker Image
        run: docker rmi -f $DOCKER_REGISTRY/$DOCKER_REPO:$IMAGE_TAG || true